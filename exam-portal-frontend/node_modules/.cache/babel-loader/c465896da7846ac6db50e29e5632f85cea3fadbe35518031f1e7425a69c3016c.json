{"ast":null,"code":"var _jsxFileName = \"/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/AdminCreateExam.jsx\";\n// Input: Exam Name\n// Line Break\n// Input: Subject\n// Line Break\n// Input: Duration\n// Line Break\n// Input: Total Marks\n// Line Break\n// Input: Question 1\n// There should be input for only one question initially\n// Line Break\n// Button: Add Question\n// When Add Question button is clicked, there should be a new input for Question 2 and an api request should be made to save the question in the question collection and the response should be stored \n// Line Break\n// Button: Create Exam\n// When Create Exam button is clicked, the exam should be created and the user should be redirected to the AdminDashboard page\nimport { set } from 'mongoose';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminCreateExam = () => {\n  const handleQuestionChange = (index, field, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index][field] = value;\n    setQuestions(updatedQuestions);\n  };\n  const handleSaveQuestion = index => {\n    const question = questions[index];\n    fetch('http://localhost:5001/api/questions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(question)\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n  };\n  const handleCreateExam = () => {\n    const examData = {\n      name: examName,\n      duration: duration,\n      subject: subject,\n      totalMarks: totalMarks,\n      questionIds: questionIds,\n      studentIds: []\n    };\n    fetch('http://localhost:5001/api/admin-create-exams', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(examData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      navigate('/admin-dashboard'); // Navigate to the exams page\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: examName,\n      onChange: e => setExamName(e.target.value),\n      placeholder: \"Exam Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: subject,\n      onChange: e => setSubject(e.target.value),\n      placeholder: \"Subject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: duration,\n      onChange: e => setDuration(e.target.value),\n      placeholder: \"Duration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: totalMarks,\n      onChange: e => setTotalMarks(e.target.value),\n      placeholder: \"Total Marks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question.questionText,\n        onChange: e => handleQuestionChange(index, 'questionText', e.target.value),\n        placeholder: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question.correctAnswer,\n        onChange: e => handleQuestionChange(index, 'correctAnswer', e.target.value),\n        placeholder: \"Correct Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: question.marks,\n        onChange: e => handleQuestionChange(index, 'marks', e.target.value),\n        placeholder: \"Marks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateExam,\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = AdminCreateExam;\nexport default AdminCreateExam;\nvar _c;\n$RefreshReg$(_c, \"AdminCreateExam\");","map":{"version":3,"names":["set","React","useState","useNavigate","jsxDEV","_jsxDEV","AdminCreateExam","handleQuestionChange","index","field","value","updatedQuestions","questions","setQuestions","handleSaveQuestion","question","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","handleCreateExam","examData","name","examName","duration","subject","totalMarks","questionIds","studentIds","ok","Error","status","navigate","children","type","onChange","e","setExamName","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","setSubject","setDuration","setTotalMarks","map","questionText","correctAnswer","marks","onClick","handleAddQuestion","_c","$RefreshReg$"],"sources":["/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/AdminCreateExam.jsx"],"sourcesContent":["// Input: Exam Name\n// Line Break\n// Input: Subject\n// Line Break\n// Input: Duration\n// Line Break\n// Input: Total Marks\n// Line Break\n// Input: Question 1\n// There should be input for only one question initially\n// Line Break\n// Button: Add Question\n// When Add Question button is clicked, there should be a new input for Question 2 and an api request should be made to save the question in the question collection and the response should be stored \n// Line Break\n// Button: Create Exam\n// When Create Exam button is clicked, the exam should be created and the user should be redirected to the AdminDashboard page\nimport { set } from 'mongoose';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AdminCreateExam = () => {\n  \n  const handleQuestionChange = (index, field, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index][field] = value;\n    setQuestions(updatedQuestions);\n  };\n\n  const handleSaveQuestion = (index) => {\n    const question = questions[index];\n\n    fetch('http://localhost:5001/api/questions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(question),\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.error(error));\n  };\n\n  const handleCreateExam = () => {\n    const examData = {\n      name: examName,\n      duration: duration,\n      subject: subject,\n      totalMarks: totalMarks,\n      questionIds: questionIds,\n      studentIds: [],\n    };\n    fetch('http://localhost:5001/api/admin-create-exams', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(examData),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        navigate('/admin-dashboard'); // Navigate to the exams page\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={examName}\n        onChange={(e) => setExamName(e.target.value)}\n        placeholder=\"Exam Name\"\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={subject}\n        onChange={(e) => setSubject(e.target.value)}\n        placeholder=\"Subject\"\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={duration}\n        onChange={(e) => setDuration(e.target.value)}\n        placeholder=\"Duration\"\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={totalMarks}\n        onChange={(e) => setTotalMarks(e.target.value)}\n        placeholder=\"Total Marks\"\n      />\n      <br />\n      {questions.map((question, index) => (\n        <div key={index}>\n          <input\n            type=\"text\"\n            value={question.questionText}\n            onChange={(e) => handleQuestionChange(index, 'questionText', e.target.value)}\n            placeholder=\"Question\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            value={question.correctAnswer}\n            onChange={(e) => handleQuestionChange(index, 'correctAnswer', e.target.value)}\n            placeholder=\"Correct Answer\"\n          />\n          <br />\n          <input\n            type=\"number\"\n            value={question.marks}\n            onChange={(e) => handleQuestionChange(index, 'marks', e.target.value)}\n            placeholder=\"Marks\"\n          />\n        </div>\n      ))}\n      <button onClick={handleAddQuestion}>Add Question</button>\n      <br />\n      <button onClick={handleCreateExam}>Create Exam</button>\n    </div>\n  );\n};\n\nexport default AdminCreateExam;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}