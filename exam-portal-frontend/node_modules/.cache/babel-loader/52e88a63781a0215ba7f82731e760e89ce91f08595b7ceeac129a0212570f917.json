{"ast":null,"code":"var _jsxFileName = \"/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/AdminCreateExam.jsx\";\n// Input: Exam Name\n// Line Break\n// Input: Subject\n// Line Break\n// Input: Duration\n// Line Break\n// Input: Total Marks\n// Line Break\n// Input: Question 1\n// There should be input for only one question initially\n// Line Break\n// Button: Add Question\n// When Add Question button is clicked, there should be a new input for Question 2 and an api request should be made to save the question in the question collection and the response should be stored \n// Line Break\n// Button: Create Exam\n// When Create Exam button is clicked, the exam should be created and the user should be redirected to the AdminDashboard page\nimport { set } from 'mongoose';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminCreateExam = () => {\n  const handleCreateExam = () => {\n    const examData = {\n      name: examName,\n      duration: duration,\n      subject: subject,\n      totalMarks: totalMarks,\n      questionIds: questionIds,\n      studentIds: []\n    };\n    fetch('http://localhost:5001/api/admin-create-exams', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(examData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      navigate('/admin-dashboard'); // Navigate to the exams page\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: examName,\n      onChange: e => setExamName(e.target.value),\n      placeholder: \"Exam Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: subject,\n      onChange: e => setSubject(e.target.value),\n      placeholder: \"Subject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: duration,\n      onChange: e => setDuration(e.target.value),\n      placeholder: \"Duration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: totalMarks,\n      onChange: e => setTotalMarks(e.target.value),\n      placeholder: \"Total Marks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question.questionText,\n        onChange: e => handleQuestionChange(index, 'questionText', e.target.value),\n        placeholder: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question.correctAnswer,\n        onChange: e => handleQuestionChange(index, 'correctAnswer', e.target.value),\n        placeholder: \"Correct Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: question.marks,\n        onChange: e => handleQuestionChange(index, 'marks', e.target.value),\n        placeholder: \"Marks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateExam,\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = AdminCreateExam;\nexport default AdminCreateExam;\nvar _c;\n$RefreshReg$(_c, \"AdminCreateExam\");","map":{"version":3,"names":["set","React","useState","useNavigate","jsxDEV","_jsxDEV","AdminCreateExam","handleCreateExam","examData","name","examName","duration","subject","totalMarks","questionIds","studentIds","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","data","console","log","navigate","catch","error","children","type","value","onChange","e","setExamName","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","setSubject","setDuration","setTotalMarks","questions","map","question","index","questionText","handleQuestionChange","correctAnswer","marks","onClick","handleAddQuestion","_c","$RefreshReg$"],"sources":["/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/AdminCreateExam.jsx"],"sourcesContent":["// Input: Exam Name\n// Line Break\n// Input: Subject\n// Line Break\n// Input: Duration\n// Line Break\n// Input: Total Marks\n// Line Break\n// Input: Question 1\n// There should be input for only one question initially\n// Line Break\n// Button: Add Question\n// When Add Question button is clicked, there should be a new input for Question 2 and an api request should be made to save the question in the question collection and the response should be stored \n// Line Break\n// Button: Create Exam\n// When Create Exam button is clicked, the exam should be created and the user should be redirected to the AdminDashboard page\nimport { set } from 'mongoose';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AdminCreateExam = () => {\n  \n\n\n  const handleCreateExam = () => {\n    const examData = {\n      name: examName,\n      duration: duration,\n      subject: subject,\n      totalMarks: totalMarks,\n      questionIds: questionIds,\n      studentIds: [],\n    };\n    fetch('http://localhost:5001/api/admin-create-exams', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(examData),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        navigate('/admin-dashboard'); // Navigate to the exams page\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={examName}\n        onChange={(e) => setExamName(e.target.value)}\n        placeholder=\"Exam Name\"\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={subject}\n        onChange={(e) => setSubject(e.target.value)}\n        placeholder=\"Subject\"\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={duration}\n        onChange={(e) => setDuration(e.target.value)}\n        placeholder=\"Duration\"\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={totalMarks}\n        onChange={(e) => setTotalMarks(e.target.value)}\n        placeholder=\"Total Marks\"\n      />\n      <br />\n      {questions.map((question, index) => (\n        <div key={index}>\n          <input\n            type=\"text\"\n            value={question.questionText}\n            onChange={(e) => handleQuestionChange(index, 'questionText', e.target.value)}\n            placeholder=\"Question\"\n          />\n          <br />\n          <input\n            type=\"text\"\n            value={question.correctAnswer}\n            onChange={(e) => handleQuestionChange(index, 'correctAnswer', e.target.value)}\n            placeholder=\"Correct Answer\"\n          />\n          <br />\n          <input\n            type=\"number\"\n            value={question.marks}\n            onChange={(e) => handleQuestionChange(index, 'marks', e.target.value)}\n            placeholder=\"Marks\"\n          />\n        </div>\n      ))}\n      <button onClick={handleAddQuestion}>Add Question</button>\n      <br />\n      <button onClick={handleCreateExam}>Create Exam</button>\n    </div>\n  );\n};\n\nexport default AdminCreateExam;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}