{"ast":null,"code":"var _jsxFileName = \"/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/StudentExamResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StudentExamResult() {\n  _s();\n  const {\n    studentId,\n    examId\n  } = useParams();\n  const [result, setResult] = useState({});\n  const [exam, setExam] = useState({});\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const fetchResult = async () => {\n      const response = await fetch(`http://localhost:5001/api/view-result/${examId}/${studentId}`);\n      if (response.status === 404) {\n        setResult({\n          message: 'Result not published'\n        });\n        return;\n      }\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const resultData = await response.json();\n      setResult(resultData);\n    };\n    fetchResult();\n  }, [examId, studentId]);\n  useEffect(() => {\n    const fetchExam = async () => {\n      const response = await fetch(`http://localhost:5001/api/student-exam/${examId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const examData = await response.json();\n      setExam(examData);\n    };\n    fetchExam();\n  }, [examId]);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      if (exam && exam.questionIds) {\n        const promises = exam.questionIds.map(async questionId => {\n          const response = await fetch(`http://localhost:5001/api/student-question/${questionId}`);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const questionData = await response.json();\n          const answerResponse = await fetch(`http://localhost:5001/api/answer/${studentId}/${questionId}`);\n          if (!answerResponse.ok) {\n            throw new Error(`HTTP error! status: ${answerResponse.status}`);\n          }\n          const answerData = await answerResponse.json();\n          return {\n            ...questionData,\n            answer: answerData\n          };\n        });\n        const questionsData = await Promise.all(promises);\n        setQuestions(questionsData);\n      }\n    };\n    if (exam) {\n      fetchQuestions();\n    }\n  }, [exam]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: result.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exam Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", exam === null || exam === void 0 ? void 0 : exam.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", exam === null || exam === void 0 ? void 0 : exam.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Marks: \", exam === null || exam === void 0 ? void 0 : exam.totalMarks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Subject: \", exam === null || exam === void 0 ? void 0 : exam.subject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question: \", question.questionText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct Answer: \", question.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Marks: \", question.marks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentExamResult, \"dYLzbDz9ACBcs8wEW0upauy+iUg=\", false, function () {\n  return [useParams];\n});\n_c = StudentExamResult;\nexport default StudentExamResult;\nvar _c;\n$RefreshReg$(_c, \"StudentExamResult\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentExamResult","_s","studentId","examId","result","setResult","exam","setExam","questions","setQuestions","fetchResult","response","fetch","status","message","ok","Error","resultData","json","fetchExam","examData","fetchQuestions","questionIds","promises","map","questionId","questionData","answerResponse","answerData","answer","questionsData","Promise","all","children","fileName","_jsxFileName","lineNumber","columnNumber","name","duration","totalMarks","subject","question","index","questionText","correctAnswer","marks","_c","$RefreshReg$"],"sources":["/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/StudentExamResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction StudentExamResult() {\n  const { studentId, examId } = useParams();\n  const [result, setResult] = useState({});\n  const [exam, setExam] = useState({});\n  const [questions, setQuestions] = useState([]);\n\n\n  useEffect(() => {\n    const fetchResult = async () => {\n      const response = await fetch(`http://localhost:5001/api/view-result/${examId}/${studentId}`);\n      if (response.status === 404) {\n        setResult({ message: 'Result not published' });\n        return;\n      }\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const resultData = await response.json();\n      setResult(resultData);\n    };\n\n    fetchResult();\n  }, [examId, studentId]);\n\n\n  useEffect(() => {\n    const fetchExam = async () => {\n      const response = await fetch(`http://localhost:5001/api/student-exam/${examId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const examData = await response.json();\n      setExam(examData);\n    };\n\n    fetchExam();\n  }, [examId]);\n\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      if (exam && exam.questionIds) {\n        const promises = exam.questionIds.map(async (questionId) => {\n          const response = await fetch(`http://localhost:5001/api/student-question/${questionId}`);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const questionData = await response.json();\n\n          const answerResponse = await fetch(`http://localhost:5001/api/answer/${studentId}/${questionId}`);\n          if (!answerResponse.ok) {\n            throw new Error(`HTTP error! status: ${answerResponse.status}`);\n          }\n          const answerData = await answerResponse.json();\n\n          return { ...questionData, answer: answerData };\n        });\n\n        const questionsData = await Promise.all(promises);\n        setQuestions(questionsData);\n      }\n    };\n\n    if (exam) {\n      fetchQuestions();\n    }\n  }, [exam]);\n\n  return (\n    <div>\n      {result.message ? (\n        <p>{result.message}</p>\n      ) : (\n        <>\n          <h2>Exam Details:</h2>\n          <p>Name: {exam?.name}</p>\n          <p>Duration: {exam?.duration}</p>\n          <p>Total Marks: {exam?.totalMarks}</p>\n          <p>Subject: {exam?.subject}</p>\n          {questions.map((question, index) => (\n            <div key={index}>\n              <p>Question: {question.questionText}</p>\n              <p>Correct Answer: {question.correctAnswer}</p>\n              <p>Marks: {question.marks}</p>\n            </div>\n          ))}\n        </>\n      )}\n    </div>\n  );\n}\nexport default StudentExamResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}