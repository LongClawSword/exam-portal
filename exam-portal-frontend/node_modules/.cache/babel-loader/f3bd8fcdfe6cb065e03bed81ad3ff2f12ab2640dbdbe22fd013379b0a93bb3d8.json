{"ast":null,"code":"var _jsxFileName = \"/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/StudentExam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentExam = () => {\n  _s();\n  const {\n    studentId,\n    examId\n  } = useParams();\n  const [exam, setExam] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`http://localhost:5001/api/student-exam/${examId}`).then(response => response.json()).then(data => {\n      setExam(data);\n      return data.questionIds;\n    }).then(questionIds => {\n      return Promise.all(questionIds.map(id => fetch(`http://localhost:5001/api/student-question/${id}`).then(response => response.json())));\n    }).then(questionsData => {\n      setQuestions(questionsData);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, [examId]);\n  const handleSaveAnswer = (studentId, questionId, index) => {\n    const answerText = document.getElementById(`answer${index}`).value;\n    fetch('http://localhost:5001/api/student-save-answer', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        studentId: studentId,\n        questionId: questionId,\n        answerText: answerText\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleSubmit = () => {\n    // Gather all the answers...\n    // Send the answers to the server...\n    fetch(`http://localhost:5001/api/exams/${exam._id}/add-student-attempted`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        studentId: studentId\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n      console.error('Error:', error);\n    });\n    fetch(`http://localhost:5001/api/students/${studentId}/add-exam-attempted`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        examId: exam._id\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n      console.error('Error:', error);\n    });\n    navigate(`/student-dashboard/${studentId}`);\n  };\n  if (!exam) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Exam Name: \", exam.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Subject: \", exam.subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Duration: \", exam.duration]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Marks: \", exam.totalMarks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: `answer${index}`,\n        placeholder: \"Write your answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSaveAnswer(studentId, question._id, index),\n        children: \"Save Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentExam, \"TJKp3o8Y4MN32HMvEP/9CbHVLyk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StudentExam;\nexport default StudentExam;\nvar _c;\n$RefreshReg$(_c, \"StudentExam\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","StudentExam","_s","studentId","examId","exam","setExam","questions","setQuestions","navigate","fetch","then","response","json","data","questionIds","Promise","all","map","id","questionsData","catch","error","console","handleSaveAnswer","questionId","index","answerText","document","getElementById","value","method","headers","body","JSON","stringify","log","handleSubmit","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","name","subject","duration","totalMarks","question","questionText","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/StudentExam.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst StudentExam = () => {\n  const { studentId, examId } = useParams();\n  const [exam, setExam] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const navigate = useNavigate();\n\n\n  useEffect(() => {\n    fetch(`http://localhost:5001/api/student-exam/${examId}`)\n      .then(response => response.json())\n      .then(data => {\n        setExam(data);\n        return data.questionIds;\n      })\n      .then(questionIds => {\n        return Promise.all(questionIds.map(id =>\n          fetch(`http://localhost:5001/api/student-question/${id}`)\n            .then(response => response.json())\n        ));\n      })\n      .then(questionsData => {\n        setQuestions(questionsData);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }, [examId]);\n\n  const handleSaveAnswer = (studentId, questionId, index) => {\n    const answerText = document.getElementById(`answer${index}`).value;\n\n    fetch('http://localhost:5001/api/student-save-answer', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        studentId: studentId,\n        questionId: questionId,\n        answerText: answerText,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  };\n\n  const handleSubmit = () => {\n    // Gather all the answers...\n    // Send the answers to the server...\n    fetch(`http://localhost:5001/api/exams/${exam._id}/add-student-attempted`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        studentId: studentId,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    fetch(`http://localhost:5001/api/students/${studentId}/add-exam-attempted`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        examId: exam._id,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n      navigate(`/student-dashboard/${studentId}`);\n  };\n\n\n  if (!exam) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <h1>Exam Name: {exam.name}</h1>\n      <p>Subject: {exam.subject}</p>\n      <p>Duration: {exam.duration}</p>\n      <p>Total Marks: {exam.totalMarks}</p>\n      {questions.map((question, index) => (\n        <div key={index}>\n          <p>{question.questionText}</p>\n          <input type=\"text\" id={`answer${index}`} placeholder='Write your answer' />\n          <button onClick={() => handleSaveAnswer(studentId, question._id, index)}>Save Answer</button>\n        </div>\n      ))}\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n};\n\nexport default StudentExam;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}