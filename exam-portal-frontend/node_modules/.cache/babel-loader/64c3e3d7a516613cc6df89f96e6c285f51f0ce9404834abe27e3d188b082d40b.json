{"ast":null,"code":"var _jsxFileName = \"/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/AdminCreateExam.jsx\",\n  _s2 = $RefreshSig$();\n// Input: Exam Name\n// Line Break\n// Input: Subject\n// Line Break\n// Input: Duration\n// Line Break\n// Input: Total Marks\n// Line Break\n// Input: Question 1\n// There should be input for only one question initially\n// Line Break\n// Button: Add Question\n// When Add Question button is clicked, there should be a new input for Question 2 and an api request should be made to save the question in the question collection and the response should be stored \n// Line Break\n// Button: Create Exam\n// When Create Exam button is clicked, the exam should be created and the user should be redirected to the AdminDashboard page\nimport { set } from 'mongoose';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminCreateExam = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const [examName, setExamName] = useState('');\n  const [subject, setSubject] = useState('');\n  const [duration, setDuration] = useState('');\n  const [totalMarks, setTotalMarks] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [questionIds, setQuestionIds] = useState([]);\n  const handleAddQuestion = () => {\n    _s();\n    const [questionText, setQuestionText] = useState('');\n    const [correctAnswer, setCorrectAnswer] = useState('');\n    const [marks, setMarks] = useState('');\n    const handleAddQuestion = () => {\n      const newQuestion = {\n        questionText,\n        correctAnswer,\n        marks\n      };\n      fetch('http://localhost:5001/api/questions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newQuestion)\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n      setQuestionText('');\n      setCorrectAnswer('');\n      setMarks('');\n    };\n    const handleCreateExam = () => {\n      const examData = {\n        name: examName,\n        duration: duration,\n        subject: subject,\n        totalMarks: totalMarks,\n        questionIds: questionIds,\n        studentIds: []\n      };\n      fetch('http://localhost:5001/api/admin-create-exams', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(examData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        navigate('/admin-dashboard'); // Navigate to the exams page\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: examName,\n        onChange: e => setExamName(e.target.value),\n        placeholder: \"Exam Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        placeholder: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: duration,\n        onChange: e => setDuration(e.target.value),\n        placeholder: \"Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: totalMarks,\n        onChange: e => setTotalMarks(e.target.value),\n        placeholder: \"Total Marks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question.questionText,\n          onChange: e => handleQuestionChange(index, 'questionText', e.target.value),\n          placeholder: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question.correctAnswer,\n          onChange: e => handleQuestionChange(index, 'correctAnswer', e.target.value),\n          placeholder: \"Correct Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: question.marks,\n          onChange: e => handleQuestionChange(index, 'marks', e.target.value),\n          placeholder: \"Marks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateExam,\n        children: \"Create Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n  _s(handleAddQuestion, \"/lbmNzZyaVGmuis7++H2AYOYoss=\");\n};\n_s2(AdminCreateExam, \"hiORJHD0F2klY4LIjs7hr8uT+rk=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminCreateExam;\nexport default AdminCreateExam;\nvar _c;\n$RefreshReg$(_c, \"AdminCreateExam\");","map":{"version":3,"names":["set","React","useState","useNavigate","jsxDEV","_jsxDEV","AdminCreateExam","_s2","_s","$RefreshSig$","navigate","examName","setExamName","subject","setSubject","duration","setDuration","totalMarks","setTotalMarks","questions","setQuestions","questionIds","setQuestionIds","handleAddQuestion","questionText","setQuestionText","correctAnswer","setCorrectAnswer","marks","setMarks","newQuestion","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","handleCreateExam","examData","name","studentIds","ok","Error","status","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","handleQuestionChange","onClick","_c","$RefreshReg$"],"sources":["/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/AdminCreateExam.jsx"],"sourcesContent":["// Input: Exam Name\n// Line Break\n// Input: Subject\n// Line Break\n// Input: Duration\n// Line Break\n// Input: Total Marks\n// Line Break\n// Input: Question 1\n// There should be input for only one question initially\n// Line Break\n// Button: Add Question\n// When Add Question button is clicked, there should be a new input for Question 2 and an api request should be made to save the question in the question collection and the response should be stored \n// Line Break\n// Button: Create Exam\n// When Create Exam button is clicked, the exam should be created and the user should be redirected to the AdminDashboard page\nimport { set } from 'mongoose';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AdminCreateExam = () => {\n  const navigate = useNavigate();\n  const [examName, setExamName] = useState('');\n  const [subject, setSubject] = useState('');\n  const [duration, setDuration] = useState('');\n  const [totalMarks, setTotalMarks] = useState('');\n  const [questions, setQuestions] = useState([]);\n\n  const [questionIds, setQuestionIds] = useState([]);\n\n  const handleAddQuestion = () => {\n    const [questionText, setQuestionText] = useState('');\n    const [correctAnswer, setCorrectAnswer] = useState('');\n    const [marks, setMarks] = useState('');\n\n    const handleAddQuestion = () => {\n      const newQuestion = { questionText, correctAnswer, marks };\n\n      fetch('http://localhost:5001/api/questions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newQuestion),\n      })\n        .then((response) => response.json())\n        .then((data) => console.log(data))\n        .catch((error) => console.error(error));\n\n      setQuestionText('');\n      setCorrectAnswer('');\n      setMarks('');\n    };\n\n    const handleCreateExam = () => {\n      const examData = {\n        name: examName,\n        duration: duration,\n        subject: subject,\n        totalMarks: totalMarks,\n        questionIds: questionIds,\n        studentIds: [],\n      };\n      fetch('http://localhost:5001/api/admin-create-exams', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(examData),\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          console.log(data);\n          navigate('/admin-dashboard'); // Navigate to the exams page\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    };\n\n    return (\n      <div>\n        <input\n          type=\"text\"\n          value={examName}\n          onChange={(e) => setExamName(e.target.value)}\n          placeholder=\"Exam Name\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={subject}\n          onChange={(e) => setSubject(e.target.value)}\n          placeholder=\"Subject\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={duration}\n          onChange={(e) => setDuration(e.target.value)}\n          placeholder=\"Duration\"\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={totalMarks}\n          onChange={(e) => setTotalMarks(e.target.value)}\n          placeholder=\"Total Marks\"\n        />\n        <br />\n        {questions.map((question, index) => (\n          <div key={index}>\n            <input\n              type=\"text\"\n              value={question.questionText}\n              onChange={(e) => handleQuestionChange(index, 'questionText', e.target.value)}\n              placeholder=\"Question\"\n            />\n            <br />\n            <input\n              type=\"text\"\n              value={question.correctAnswer}\n              onChange={(e) => handleQuestionChange(index, 'correctAnswer', e.target.value)}\n              placeholder=\"Correct Answer\"\n            />\n            <br />\n            <input\n              type=\"number\"\n              value={question.marks}\n              onChange={(e) => handleQuestionChange(index, 'marks', e.target.value)}\n              placeholder=\"Marks\"\n            />\n          </div>\n        ))}\n        <button onClick={handleAddQuestion}>Add Question</button>\n        <br />\n        <button onClick={handleCreateExam}>Create Exam</button>\n      </div>\n    );\n  };\n}\n\n  export default AdminCreateExam;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}