{"ast":null,"code":"var _jsxFileName = \"/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/AdminSubmissions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminSubmissions = () => {\n  _s();\n  const [exam, setExam] = useState(null);\n  const [students, setStudents] = useState([]);\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchExamDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/api/admin-view-exams/${examId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const exam = await response.json();\n        setExam(exam);\n\n        // Fetch student names\n        const studentPromises = exam.studentIds.map(studentId => fetch(`http://localhost:5001/api/students/${studentId}`).then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        }));\n        const students = await Promise.all(studentPromises);\n        setStudents(students);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchExamDetails();\n  }, [examId]);\n  const viewSubmission = studentId => {\n    navigate(`/admin-submission/${examId}/${studentId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: exam && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exam Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", exam.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Subject: \", exam.subject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", exam.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Marks: \", exam.totalMarks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), students.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Students:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), students.map((student, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => viewSubmission(exam.studentIds[index]),\n            children: \"View Submission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminSubmissions, \"BCy91M4DhUWBo9pgO1/+NCE3+Kg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AdminSubmissions;\nexport default AdminSubmissions;\nvar _c;\n$RefreshReg$(_c, \"AdminSubmissions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminSubmissions","_s","exam","setExam","students","setStudents","examId","navigate","fetchExamDetails","response","fetch","ok","Error","status","json","studentPromises","studentIds","map","studentId","then","Promise","all","error","console","viewSubmission","children","fileName","_jsxFileName","lineNumber","columnNumber","name","subject","duration","totalMarks","length","student","index","onClick","_c","$RefreshReg$"],"sources":["/Users/aryansingh/Desktop/Exam portal/exam-portal-frontend/src/pages/AdminSubmissions.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst AdminSubmissions = () => {\n    const [exam, setExam] = useState(null);\n    const [students, setStudents] = useState([]);\n    const { examId } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchExamDetails = async () => {\n            try {\n                const response = await fetch(`http://localhost:5001/api/admin-view-exams/${examId}`);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const exam = await response.json();\n                setExam(exam);\n\n                // Fetch student names\n                const studentPromises = exam.studentIds.map(studentId =>\n                    fetch(`http://localhost:5001/api/students/${studentId}`).then(response => {\n                        if (!response.ok) {\n                            throw new Error(`HTTP error! status: ${response.status}`);\n                        }\n                        return response.json();\n                    })\n                );\n\n                const students = await Promise.all(studentPromises);\n                setStudents(students);\n\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchExamDetails();\n    }, [examId]);\n\n    const viewSubmission = (studentId) => {\n        navigate(`/admin-submission/${examId}/${studentId}`);\n      };\n\n    return (\n        <div>\n            {exam && (\n                <>\n                    <h2>Exam Details:</h2>\n                    <p>Name: {exam.name}</p>\n                    <p>Subject: {exam.subject}</p>\n                    <p>Duration: {exam.duration}</p>\n                    <p>Total Marks: {exam.totalMarks}</p>\n                    {students.length > 0 && (\n                        <>\n                            <h2>Students:</h2>\n                            {students.map((student, index) => (\n                                <div key={index}>\n                                    <p>{student.name}</p>\n                                    <button onClick={() => viewSubmission(exam.studentIds[index])}>View Submission</button>\n                                </div>\n                            ))}\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default AdminSubmissions;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEc;EAAO,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CJ,MAAO,EAAC,CAAC;QACpF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC7D;QACA,MAAMX,IAAI,GAAG,MAAMO,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,OAAO,CAACD,IAAI,CAAC;;QAEb;QACA,MAAMa,eAAe,GAAGb,IAAI,CAACc,UAAU,CAACC,GAAG,CAACC,SAAS,IACjDR,KAAK,CAAE,sCAAqCQ,SAAU,EAAC,CAAC,CAACC,IAAI,CAACV,QAAQ,IAAI;UACtE,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;UAC7D;UACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAC1B,CAAC,CACL,CAAC;QAED,MAAMV,QAAQ,GAAG,MAAMgB,OAAO,CAACC,GAAG,CAACN,eAAe,CAAC;QACnDV,WAAW,CAACD,QAAQ,CAAC;MAEzB,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAEDd,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,MAAMkB,cAAc,GAAIN,SAAS,IAAK;IAClCX,QAAQ,CAAE,qBAAoBD,MAAO,IAAGY,SAAU,EAAC,CAAC;EACtD,CAAC;EAEH,oBACIrB,OAAA;IAAA4B,QAAA,EACKvB,IAAI,iBACDL,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACI5B,OAAA;QAAA4B,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBhC,OAAA;QAAA4B,QAAA,GAAG,QAAM,EAACvB,IAAI,CAAC4B,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhC,OAAA;QAAA4B,QAAA,GAAG,WAAS,EAACvB,IAAI,CAAC6B,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BhC,OAAA;QAAA4B,QAAA,GAAG,YAAU,EAACvB,IAAI,CAAC8B,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChChC,OAAA;QAAA4B,QAAA,GAAG,eAAa,EAACvB,IAAI,CAAC+B,UAAU;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpCzB,QAAQ,CAAC8B,MAAM,GAAG,CAAC,iBAChBrC,OAAA,CAAAE,SAAA;QAAA0B,QAAA,gBACI5B,OAAA;UAAA4B,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjBzB,QAAQ,CAACa,GAAG,CAAC,CAACkB,OAAO,EAAEC,KAAK,kBACzBvC,OAAA;UAAA4B,QAAA,gBACI5B,OAAA;YAAA4B,QAAA,EAAIU,OAAO,CAACL;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBhC,OAAA;YAAQwC,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACtB,IAAI,CAACc,UAAU,CAACoB,KAAK,CAAC,CAAE;YAAAX,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAFjFO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACR,CAAC;MAAA,eACJ,CACL;IAAA,eACH;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAA5B,EAAA,CAjEKD,gBAAgB;EAAA,QAGCN,SAAS,EACXC,WAAW;AAAA;AAAA2C,EAAA,GAJ1BtC,gBAAgB;AAmEtB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}